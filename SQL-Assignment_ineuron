1) Query all columns for all American cities in the CITY table with populations larger than 100000. The CountryCode for America is USA.
Query: select * from city where population > 100000 and countrycode = 'USA';

2) Query the NAME field for all American cities in the CITY table with populations larger than 120000. The CountryCode for America is USA.
Query: select * from city where population > 120000 and countrycode = 'USA';

3) Query all columns (attributes) for every row in the CITY table.
Query: select * from city;

Q4. Query all columns for a city in CITY with the ID 1661
Query: select * from city where ID = 1661;

Q5. Query all attributes of every Japanese city in the CITY table. The COUNTRYCODE for Japan is JPN.
Query: select * from city where countrycode = 'JPN';

Q6. Query the names of all the Japanese cities in the CITY table. The COUNTRYCODE for Japan is JPN.
Query: select name from city where countrycode = 'JPN';

Q7. Query a list of CITY and STATE from the STATION table.
Query: select city, state from station order by city, state;

Q8. Query a list of CITY names from STATION for cities that have an even ID number.
Print the results in any order, but exclude duplicates from the answer.
Query: select Distinct city from station where (ID % 2) = 0 order by city;

Q9. Find the difference between the total number of CITY entries in the table and the number of distinct CITY entries in the table.
Query: select count(city) - count(Distinct city) from station;

Q10. Query the two cities in STATION with the shortest and longest CITY names, as well as their respective lengths (i.e.: number of characters in the name).
If there is more than one smallest or largest city, choose the one that comes first when ordered alphabetically.
Query: (select city, length(city) as city_len from station order by city_len asc, city asc limit 1) union
(select city, length(city) as city_len from station order by city_len desc, city asc limit 1);

Q11. Query the list of CITY names starting with vowels (i.e., a, e, i, o, or u) from STATION. Your result cannot contain duplicates.
Query: select Distinct city from station where regex '^[aeiouAEIOU]';

Q12. Query the list of CITY names ending with vowels (a, e, i, o, u) from STATION. Your result cannot contain duplicates.
Query: select Distinct city from station where regex '[aeiouAEIOU]$';

Q13. Query the list of CITY names from STATION that do not start with vowels. Your result cannot contain duplicates.
Query: select Distinct city from station where regex '^[^aeiouAEIOU]';

Q14. Query the list of CITY names from STATION that do not end with vowels. Your result cannot contain duplicates.
Query: select Distinct city where regex '[^aeiouAEIOU]$';

Q15. Query the list of CITY names from STATION that either do not start with vowels or do not end with vowels.
Your result cannot contain duplicates.
Query: select Distinct city from station where city regex '^[aeiou].+' or city regex '.+[^aeiou]$' order by city;

Q16. Query the list of CITY names from STATION that do not start with vowels and do not end with vowels. Your result cannot contain duplicates.
Query: select distinct city from station where city not regex '^[aeiouAEIOU].*[aeiouAEIOU]$';

Q17. Write an SQL query that reports the products that were only sold in the first quarter of 2019. 
That is, between 2019-01-01 and 2019-03-31 inclusive.
Return the result table in any order.
Query: select p.product_id, p.product_name from product p inner join sales s on p.product_id = s.product_id 
group by p.product_id, p.product_name having min(s.sales_date) >= '2019-01-01' and max(s.sales_date) <= '2019-03-31';

Q18. Write a SQL query to find all the authors that viewed at least one of their own articles. Return the result table stored 
by id in ascending order.
Query: select Distinct a.author_id from views a join views v on author_id 
